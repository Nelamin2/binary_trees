nclude "binary_trees.h"
#include "102-binary_tree_is_complete.c"
/**
 * check_maximum_nodes - goes through a binary tree cheking ropt as max value
 * @tree: pointer to the root
 * Return: 1 if all nodes are max, 0 in other cases
 **/
int check_maximum_nodes(const binary_tree_t *tree)
{
        int a, b;
        a = 1;
        b = 1;

        if (!tree)
                return (0);
        if (!tree->left && !tree->right)
                return (1);
        if (tree->left)
        {
                if (tree->n <= tree->left->n)
                        return (0);
                a = check_maximum(tree->left);
        }
        if (tree->right)
        {
                if (tree->n <= tree->right->n)
                        return (0);
                b = check_maximum(tree->right);
        }
        return (a && b);
}
/**
 * binary_tree_is_heap - checks if a binary tree is heap
 * @tree: pointer to the node
 * Return: 1 in case BTS /  0 otherwise
 **/
int binary_tree_is_heap(const binary_tree_t *tree)
{
int x;
if (!tree)
return (0);
x = binary_tree_is_complete(tree);
if (!x)
return (0);
return (check_maximum_nodes(tree));
}
